"""adds currency

Revision ID: aaf1b42c7a9d
Revises: 52be13242395
Create Date: 2025-06-29 17:59:01.158294

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aaf1b42c7a9d'
down_revision = '52be13242395'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.Enum('USD', 'EUR', 'GBP', 'KES', 'UGX', 'TZS', 'NGN', 'GHS', 'ZAR', 'JPY', 'CAD', 'AUD', name='currencycode'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('is_base_currency', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_currency_id', sa.Integer(), nullable=False),
    sa.Column('to_currency_id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('effective_date', sa.DateTime(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['to_currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('from_currency_id', 'to_currency_id', 'is_active', name='uix_active_exchange_rate')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('ticket_type_id', sa.Integer(), nullable=True),
    sa.Column('base_currency_id', sa.Integer(), nullable=False),
    sa.Column('report_scope', sa.String(length=50), nullable=False),
    sa.Column('total_tickets_sold', sa.Integer(), nullable=False),
    sa.Column('total_revenue', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('number_of_attendees', sa.Integer(), nullable=True),
    sa.Column('report_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['base_currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['organizer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['ticket_type_id'], ['ticket_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reports_event_id'), ['event_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_organizer_id'), ['organizer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_ticket_type_id'), ['ticket_type_id'], unique=False)

    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.drop_index('ix_report_event_id')
        batch_op.drop_index('ix_report_ticket_type_id')

    op.drop_table('report')
    with op.batch_alter_table('ticket_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency_id', sa.Integer(), nullable=True))
        batch_op.alter_column('price',
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=False)
        batch_op.create_foreign_key('fk_ticket_currency', 'currencies', ['currency_id'], ['id'])
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency_id', sa.Integer(), nullable=True))
        batch_op.alter_column('amount_paid',
            existing_type=sa.NUMERIC(precision=8, scale=2),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=False)
        batch_op.create_foreign_key('fk_transaction_currency', 'currencies', ['currency_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('amount_paid',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=8, scale=2),
               existing_nullable=False)
        batch_op.drop_column('currency_id')

    with op.batch_alter_table('ticket_type', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('price',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
        batch_op.drop_column('currency_id')

    op.create_table('report',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ticket_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_tickets_sold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_revenue', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('report_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='report_event_id_fkey'),
    sa.ForeignKeyConstraint(['ticket_type_id'], ['ticket_type.id'], name='report_ticket_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='report_pkey')
    )
    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.create_index('ix_report_ticket_type_id', ['ticket_type_id'], unique=False)
        batch_op.create_index('ix_report_event_id', ['event_id'], unique=False)

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reports_ticket_type_id'))
        batch_op.drop_index(batch_op.f('ix_reports_organizer_id'))
        batch_op.drop_index(batch_op.f('ix_reports_event_id'))

    op.drop_table('reports')
    op.drop_table('exchange_rates')
    op.drop_table('currencies')
    # ### end Alembic commands ###
