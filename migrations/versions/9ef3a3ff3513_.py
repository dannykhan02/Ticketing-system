"""empty message

Revision ID: 9ef3a3ff3513
Revises: ad3702aab977
Create Date: 2025-10-08 23:09:01.314092

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ef3a3ff3513'
down_revision = 'ad3702aab977'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ai_action_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('collaboration_id', sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f('ix_ai_action_logs_collaboration_id'), ['collaboration_id'], unique=False)
        batch_op.create_foreign_key(None, 'event_collaborations', ['collaboration_id'], ['id'])

    with op.batch_alter_table('event_collaborations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('logo_placement', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('ai_suggested_collaboration', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('ai_match_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('ai_value_prediction', sa.Numeric(precision=12, scale=2), nullable=True))
        batch_op.add_column(sa.Column('ai_audience_overlap_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('ai_recommendation_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('engagement_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('contribution_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('estimated_reach', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('actual_impact', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('partnership_terms', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('deliverables_status', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('ai_performance_insights', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('ai_suggested_improvements', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('activated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('completed_at', sa.DateTime(), nullable=True))
        batch_op.create_index('idx_collab_match_score', ['ai_match_score'], unique=False)
        batch_op.create_index('idx_collab_status', ['status', 'is_active'], unique=False)

    with op.batch_alter_table('partners', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ai_description_enhanced', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('ai_partnership_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('ai_recommended_collaboration_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('ai_target_audience_overlap', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('ai_suggested_events', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('performance_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('engagement_rate', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('roi_estimate', sa.Numeric(precision=12, scale=2), nullable=True))
        batch_op.add_column(sa.Column('ai_auto_suggest_events', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('ai_smart_matching_enabled', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('last_ai_analysis', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('partners', schema=None) as batch_op:
        batch_op.drop_column('last_ai_analysis')
        batch_op.drop_column('ai_smart_matching_enabled')
        batch_op.drop_column('ai_auto_suggest_events')
        batch_op.drop_column('roi_estimate')
        batch_op.drop_column('engagement_rate')
        batch_op.drop_column('performance_score')
        batch_op.drop_column('ai_suggested_events')
        batch_op.drop_column('ai_target_audience_overlap')
        batch_op.drop_column('ai_recommended_collaboration_types')
        batch_op.drop_column('ai_partnership_score')
        batch_op.drop_column('ai_description_enhanced')

    with op.batch_alter_table('event_collaborations', schema=None) as batch_op:
        batch_op.drop_index('idx_collab_status')
        batch_op.drop_index('idx_collab_match_score')
        batch_op.drop_column('completed_at')
        batch_op.drop_column('activated_at')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('status')
        batch_op.drop_column('ai_suggested_improvements')
        batch_op.drop_column('ai_performance_insights')
        batch_op.drop_column('deliverables_status')
        batch_op.drop_column('partnership_terms')
        batch_op.drop_column('actual_impact')
        batch_op.drop_column('estimated_reach')
        batch_op.drop_column('contribution_score')
        batch_op.drop_column('engagement_metrics')
        batch_op.drop_column('ai_recommendation_reason')
        batch_op.drop_column('ai_audience_overlap_score')
        batch_op.drop_column('ai_value_prediction')
        batch_op.drop_column('ai_match_score')
        batch_op.drop_column('ai_suggested_collaboration')
        batch_op.drop_column('logo_placement')

    with op.batch_alter_table('ai_action_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_ai_action_logs_collaboration_id'))
        batch_op.drop_column('collaboration_id')

    # ### end Alembic commands ###
